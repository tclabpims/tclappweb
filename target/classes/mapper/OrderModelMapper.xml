<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tcl.dao.OrderModelMapper" >
  <resultMap id="BaseResultMap" type="com.tcl.model.OrderModel" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="trade_id" property="tradeId" jdbcType="BIGINT" />
    <result column="package_id" property="packageId" jdbcType="BIGINT" />
    <result column="package_name" property="packageName" jdbcType="VARCHAR" />
    <result column="package_num" property="packageNum" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="take_time" property="takeTime" jdbcType="TIMESTAMP" />
    <result column="report_time" property="reportTime" jdbcType="VARCHAR" />
    <result column="barcode" property="barcode" jdbcType="VARCHAR" />
    <result column="report_url" property="reportUrl" jdbcType="VARCHAR" />
    <result column="report_accept_time" property="reportAcceptTime" jdbcType="VARCHAR" />
    <result column="unscramble_time" property="unscrambleTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.tcl.model.OrderModelWithBLOBs" extends="BaseResultMap" >
    <result column="remark" property="remark" jdbcType="LONGVARCHAR" />
    <result column="unscramble_content" property="unscrambleContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, trade_id, package_id, package_name, package_num, price, status, take_time, 
    report_time, barcode, report_url, report_accept_time, unscramble_time, create_time, 
    modify_time
  </sql>
  <sql id="Blob_Column_List" >
    remark, unscramble_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from app_c_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from app_c_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.tcl.model.OrderModelWithBLOBs" >
    insert into app_c_order (id, user_id, trade_id, 
      package_id, package_name, package_num, 
      price, status, take_time, 
      report_time, barcode, report_url, 
      report_accept_time, unscramble_time, create_time, 
      modify_time, remark, unscramble_content
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{tradeId,jdbcType=BIGINT}, 
      #{packageId,jdbcType=BIGINT}, #{packageName,jdbcType=VARCHAR}, #{packageNum,jdbcType=INTEGER}, 
      #{price,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, #{takeTime,jdbcType=TIMESTAMP}, 
      #{reportTime,jdbcType=VARCHAR}, #{barcode,jdbcType=VARCHAR}, #{reportUrl,jdbcType=VARCHAR}, 
      #{reportAcceptTime,jdbcType=VARCHAR}, #{unscrambleTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=LONGVARCHAR}, #{unscrambleContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tcl.model.OrderModelWithBLOBs" >
    insert into app_c_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="tradeId != null" >
        trade_id,
      </if>
      <if test="packageId != null" >
        package_id,
      </if>
      <if test="packageName != null" >
        package_name,
      </if>
      <if test="packageNum != null" >
        package_num,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="takeTime != null" >
        take_time,
      </if>
      <if test="reportTime != null" >
        report_time,
      </if>
      <if test="barcode != null" >
        barcode,
      </if>
      <if test="reportUrl != null" >
        report_url,
      </if>
      <if test="reportAcceptTime != null" >
        report_accept_time,
      </if>
      <if test="unscrambleTime != null" >
        unscramble_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="unscrambleContent != null" >
        unscramble_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="tradeId != null" >
        #{tradeId,jdbcType=BIGINT},
      </if>
      <if test="packageId != null" >
        #{packageId,jdbcType=BIGINT},
      </if>
      <if test="packageName != null" >
        #{packageName,jdbcType=VARCHAR},
      </if>
      <if test="packageNum != null" >
        #{packageNum,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="takeTime != null" >
        #{takeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reportTime != null" >
        #{reportTime,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null" >
        #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="reportUrl != null" >
        #{reportUrl,jdbcType=VARCHAR},
      </if>
      <if test="reportAcceptTime != null" >
        #{reportAcceptTime,jdbcType=VARCHAR},
      </if>
      <if test="unscrambleTime != null" >
        #{unscrambleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="unscrambleContent != null" >
        #{unscrambleContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tcl.model.OrderModelWithBLOBs" >
    update app_c_order
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="tradeId != null" >
        trade_id = #{tradeId,jdbcType=BIGINT},
      </if>
      <if test="packageId != null" >
        package_id = #{packageId,jdbcType=BIGINT},
      </if>
      <if test="packageName != null" >
        package_name = #{packageName,jdbcType=VARCHAR},
      </if>
      <if test="packageNum != null" >
        package_num = #{packageNum,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="takeTime != null" >
        take_time = #{takeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reportTime != null" >
        report_time = #{reportTime,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null" >
        barcode = #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="reportUrl != null" >
        report_url = #{reportUrl,jdbcType=VARCHAR},
      </if>
      <if test="reportAcceptTime != null" >
        report_accept_time = #{reportAcceptTime,jdbcType=VARCHAR},
      </if>
      <if test="unscrambleTime != null" >
        unscramble_time = #{unscrambleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="unscrambleContent != null" >
        unscramble_content = #{unscrambleContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.tcl.model.OrderModelWithBLOBs" >
    update app_c_order
    set user_id = #{userId,jdbcType=BIGINT},
      trade_id = #{tradeId,jdbcType=BIGINT},
      package_id = #{packageId,jdbcType=BIGINT},
      package_name = #{packageName,jdbcType=VARCHAR},
      package_num = #{packageNum,jdbcType=INTEGER},
      price = #{price,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      take_time = #{takeTime,jdbcType=TIMESTAMP},
      report_time = #{reportTime,jdbcType=VARCHAR},
      barcode = #{barcode,jdbcType=VARCHAR},
      report_url = #{reportUrl,jdbcType=VARCHAR},
      report_accept_time = #{reportAcceptTime,jdbcType=VARCHAR},
      unscramble_time = #{unscrambleTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=LONGVARCHAR},
      unscramble_content = #{unscrambleContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tcl.model.OrderModel" >
    update app_c_order
    set user_id = #{userId,jdbcType=BIGINT},
      trade_id = #{tradeId,jdbcType=BIGINT},
      package_id = #{packageId,jdbcType=BIGINT},
      package_name = #{packageName,jdbcType=VARCHAR},
      package_num = #{packageNum,jdbcType=INTEGER},
      price = #{price,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      take_time = #{takeTime,jdbcType=TIMESTAMP},
      report_time = #{reportTime,jdbcType=VARCHAR},
      barcode = #{barcode,jdbcType=VARCHAR},
      report_url = #{reportUrl,jdbcType=VARCHAR},
      report_accept_time = #{reportAcceptTime,jdbcType=VARCHAR},
      unscramble_time = #{unscrambleTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>